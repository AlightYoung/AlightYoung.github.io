(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{469:function(t,a,s){"use strict";s.r(a);var v=s(2),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据结构"}},[t._v("#")]),t._v(" 什么是数据结构")]),t._v(" "),a("p",[t._v("数据结构是计算机存储、组织数据的方式。数据结构是指相互之间存在一种或多种特定关系的数据元素的集合。通常情况下，精心选择的数据结构可以带来更高的运行或者存储效率。数据结构往往同高效的检索算法和索引技术有关。")]),t._v(" "),a("p",[t._v("常见的数据结构有")]),t._v(" "),a("ul",[a("li",[t._v("数组（Array）")]),t._v(" "),a("li",[t._v("链表（Linked list）")]),t._v(" "),a("li",[t._v("散列表（Hash）")]),t._v(" "),a("li",[t._v("队列（Queue）")]),t._v(" "),a("li",[t._v("树（Tree）")]),t._v(" "),a("li",[t._v("栈（Stack）")]),t._v(" "),a("li",[t._v("堆（Heap）")]),t._v(" "),a("li",[t._v("图（Graph）")])]),t._v(" "),a("h2",{attrs:{id:"数据的逻辑结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据的逻辑结构"}},[t._v("#")]),t._v(" 数据的逻辑结构")]),t._v(" "),a("p",[t._v("指反映数据元素之间的逻辑关系的数据结构，其中的逻辑关系是指数据元素之间的前后间关系，而与他们在计算机中的存储位置无关。逻辑结构包括：")]),t._v(" "),a("ul",[a("li",[t._v("集合（数据结构中的元素之间除了“同属一个集合” 的相互关系外，别无其他关系）")]),t._v(" "),a("li",[t._v("线性结构（数据结构中的元素存在一对一的相互关系）")]),t._v(" "),a("li",[t._v("树形结构（数据结构中的元素存在一对多的相互关系）")]),t._v(" "),a("li",[t._v("图形结构（数据结构中的元素存在多对多的相互关系）")])]),t._v(" "),a("h2",{attrs:{id:"数据结构分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构分类"}},[t._v("#")]),t._v(" 数据结构分类")]),t._v(" "),a("p",[t._v("数据结构有很多种，一般来说，按照数据的逻辑结构对其进行简单的分类，包括"),a("strong",[t._v("线性结构")]),t._v("和"),a("strong",[t._v("非线性结构")]),t._v("两类。")]),t._v(" "),a("h3",{attrs:{id:"线性结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性结构"}},[t._v("#")]),t._v(" 线性结构")]),t._v(" "),a("p",[t._v("线性结构就是表中各个结点具有线性关系。如果从数据结构的语言来描述，线性结构应该包括如下几点：")]),t._v(" "),a("ol",[a("li",[t._v("线性结构是非空集。")]),t._v(" "),a("li",[t._v("线性结构有且仅有一个开始结点和一个终端结点。")]),t._v(" "),a("li",[t._v("线性结构所有结点都最多只有一个直接前趋结点和一个直接后继结点。")])]),t._v(" "),a("p",[t._v("线性表就是典型的线性结构，还有栈、队列和串等都属于线性结构。")]),t._v(" "),a("h3",{attrs:{id:"非线性结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非线性结构"}},[t._v("#")]),t._v(" 非线性结构")]),t._v(" "),a("p",[t._v("非线性结构就是表中各个结点之间具有多个对应关系。如果从数据结构的语言来描述，非线性结构应该包括如下几点：")]),t._v(" "),a("ol",[a("li",[t._v("非线性结构是非空集。")]),t._v(" "),a("li",[t._v("非线性结构的一个结点可能有多个直接前趋结点和多个直接后继结点。")])]),t._v(" "),a("p",[t._v("在实际应用中，数组、广义表、树结构和图结构等数据结构都属于非线性结构。")]),t._v(" "),a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("p",[t._v("数组是一种聚合数据类型，它是将具有相同类型的若干变量有序地组织在一起的集合。数组可以说是最基本的数据结构，在各种编程语言中都有对应。一个数组可以分解为多个数组元素，按照数据元素的类型，数组可以分为整型数组、字符型数组、浮点型数组、指针数组和结构数组等。数组还可以有一维、二维以及多维等表现形式。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/array.jpg",alt:"array"}})]),t._v(" "),a("h2",{attrs:{id:"链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),a("p",[t._v("链表是一种数据元素按照链式存储结构进行存储的数据结构，这种存储结构具有在物理上存在非连续的特点。链表由一系列数据结点构成，每个数据结点包括数据域和指针域两部分。其中，指针域保存了数据结构中下一个元素存放的地址。链表结构中数据元素的逻辑顺序是通过链表中的指针链接次序来实现的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/linklist.jpg",alt:"linklist"}})]),t._v(" "),a("h3",{attrs:{id:"跳表-skiplist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跳表-skiplist"}},[t._v("#")]),t._v(" 跳表（skiplist）")]),t._v(" "),a("p",[t._v("增加了向前指针的链表叫作跳表。跳表全称叫做跳跃表，简称跳表。跳表是一个随机化的数据结构，实质就是一种可以进行"),a("strong",[t._v("二分查找")]),t._v("的有序链表。跳表在原有的有序链表上面增加了"),a("strong",[t._v("多级索引")]),t._v("，通过索引来实现快速查找。跳表不仅能提高搜索性能，同时也可以提高插入和删除操作的性能。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/skiplist.jpg",alt:"skiplist"}})]),t._v(" "),a("h2",{attrs:{id:"散列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#散列表"}},[t._v("#")]),t._v(" 散列表")]),t._v(" "),a("p",[t._v("散列表源自于散列函数(Hash function)，其思想是如果在结构中存在关键字和T相等的记录，那么必定在F(T)的存储位置可以找到该记录，这样就可以不用进行比较操作而直接取得所查记录。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/hashtable.jpg",alt:"hashtable"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/hashtable2.jpg",alt:"hashtable2"}})]),t._v(" "),a("h2",{attrs:{id:"队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),a("p",[t._v("队列和栈类似，也是一种特殊的"),a("strong",[t._v("线性表")]),t._v("。和栈不同的是，队列只允许在表的一端进行插入操作，而在另一端进行删除操作。一般来说，进行插入操作的一端称为队尾，进行删除操作的一端称为队头。队列中没有元素时，称为空队列。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/queue.gif",alt:"queue"}})]),t._v(" "),a("h2",{attrs:{id:"树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[t._v("#")]),t._v(" 树")]),t._v(" "),a("p",[t._v("树是典型的"),a("strong",[t._v("非线性结构")]),t._v("，它是包括，2个结点的有穷集合K。在树结构中，"),a("strong",[t._v("有且仅有一个根结点")]),t._v("，该结点没有前驱结点。在树结构中的"),a("strong",[t._v("其他结点")]),t._v("都"),a("strong",[t._v("有且仅有一个前驱结点")]),t._v("，而且"),a("strong",[t._v("可以有两个后继结点")]),t._v("，m≥0。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/tree.jpg",alt:"tree"}})]),t._v(" "),a("h2",{attrs:{id:"栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),a("p",[t._v("栈是一种特殊的"),a("strong",[t._v("线性表")]),t._v("，它只能在一个表的一个固定端进行数据结点的插入和删除操作。栈按照"),a("strong",[t._v("后进先出")]),t._v("的原则来存储数据，也就是说，先插入的数据将被压入栈底，最后插入的数据在栈顶，读出数据时，从栈顶开始逐个读出。栈在汇编语言程序中，经常用于重要数据的现场保护。栈中没有数据时，称为空栈。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/stack.gif",alt:"stack"}})]),t._v(" "),a("h2",{attrs:{id:"堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),a("p",[t._v("堆是一种特殊的"),a("strong",[t._v("树形数据结构")]),t._v("，一般讨论的堆都是"),a("strong",[t._v("二叉堆")]),t._v("。堆的特点是"),a("strong",[t._v("根结点")]),t._v("的值是所有结点中"),a("strong",[t._v("最小")]),t._v("的"),a("strong",[t._v("或")]),t._v("者"),a("strong",[t._v("最大")]),t._v("的，并且根结点的两个子树也是一个堆结构。")]),t._v(" "),a("p",[t._v("堆通常可以被看做一棵树的数组对象。\n堆的具体实现-般不通过指针域，而是通过构建一个一维数组与二叉树的父子结点进行对应,\n因此堆总是一颗完全二叉树。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/heap.jpg",alt:"heap"}})]),t._v(" "),a("h2",{attrs:{id:"图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图"}},[t._v("#")]),t._v(" 图")]),t._v(" "),a("p",[t._v("图是另一种"),a("strong",[t._v("非线性数据结构")]),t._v("。在图结构中，数据结点一般称为"),a("strong",[t._v("顶点")]),t._v("，而"),a("strong",[t._v("边")]),t._v("是"),a("strong",[t._v("顶点")]),t._v("的"),a("strong",[t._v("有序偶对")]),t._v("。如果两个顶点之间存在一条边，那么就表示这两个顶点具有相邻关系。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/AlightYoung/static/raw/master/img/graph.jpg",alt:"graph"}})]),t._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),a("p",[t._v("至此，对于数据结构的基本概念你可能已经有了一定的理解")]),t._v(" "),a("p",[t._v("更多数据结构的具体应用以及实现原理，可以找更加权威的资料进行详细学习。")])])}),[],!1,null,null,null);a.default=_.exports}}]);